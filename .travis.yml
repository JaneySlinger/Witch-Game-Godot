services:
- docker

env:
  # Use this to set your game's name. It is being used
  # throughout this file for naming exported artifacts.
  # This will, for example, create an "HareDerLage.exe"
  - GAME_NAME="WitchGame"

install:
- docker pull gamedrivendesign/godot-export

# Each of the following lines exports the game for a given platform.
# You can specify the platform in the EXPORT_NAME variable
# The exported game will be written to the folder specified after the second "-v" flag
# "-v $(pwd)/output/html5:/build/output" writes the exported game to  the "output/html5" folder.
script:
- docker run -e EXPORT_NAME="HTML5"           -e OUTPUT_FILENAME="index.html"           -v $(pwd):/build/src -v $(pwd)/output/html5:/build/output   gamedrivendesign/godot-export

# The following block is responsible for pushing the HTML5 version of the game
# to GitHub Pages. To do so, Travis will commit the contents specified in "local-dir"
# to a "gh-pages" branch in your repository. It will then be accessible at:
# username.github.io/reponame if your repo is at github.com/username/reponame.
- provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  local-dir: output/html5
  on:
    # This will only update the game with new commits from the master branch
    # You can optionally only update the game on new git tags.
    branch: master
    # tags: true